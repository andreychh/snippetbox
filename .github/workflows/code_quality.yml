name: Qodana Code Coverage & Quality
on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install dependencies
        run: go mod download

      - name: Build
        run: go build -v ./...

  test:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
      pull-requests: write
      checks: write
    steps:

      - name: Check out code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - name: Test
        run: |
          mkdir -p .qodana/code-coverage
          go test ./... -coverprofile .qodana/code-coverage/coverage.out

      - name: Archive coverage data
        uses: actions/upload-artifact@v4
        with:
          name: coverage-data
          path: .qodana/code-coverage

      - name: Qodana Scan
        uses: JetBrains/qodana-action@v2024.1
        with:
          pr-mode: false
          args: '--linter,jetbrains/qodana-go:latest'
        env:
          QODANA_TOKEN: ${{ secrets.QODANA_TOKEN }}
          QODANA_ENDPOINT: 'https://qodana.cloud'
